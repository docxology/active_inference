name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --dev
        uv sync --extra test

    - name: Run linting
      run: |
        uv run black --check src/ tests/
        uv run isort --check-only src/ tests/
        uv run flake8 src/ tests/
        uv run mypy src/

    - name: Run unit tests
      run: |
        uv run python -m pytest tests/unit/ -v --tb=short --durations=10

    - name: Run integration tests
      run: |
        uv run python -m pytest tests/integration/ -v --tb=short

    - name: Run tests with coverage
      run: |
        uv run python -m pytest tests/ --cov=src/ --cov-report=xml --cov-report=term-missing --cov-fail-under=80

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Run knowledge validation tests
      run: |
        uv run python -m pytest tests/knowledge/ -v --tb=short

    - name: Test documentation build
      run: |
        uv run sphinx-build -b html docs/ docs/_build/ -W

    - name: Run performance tests
      run: |
        uv run python -m pytest tests/performance/ -v --tb=short
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run security tests
      run: |
        uv run python -m pytest tests/security/ -v --tb=short
      continue-on-error: true

    - name: Run dependency vulnerability scan
      run: |
        uv run pip install safety
        uv run safety check
      continue-on-error: true

  documentation:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Build documentation
      run: |
        uv run sphinx-build -b html docs/ docs/_build/

    - name: Deploy documentation
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/
